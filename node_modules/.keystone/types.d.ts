import {
  KeystoneListsAPI as GenericKeystoneListsAPI,
  KeystoneDbAPI as GenericKeystoneDbAPI,
  KeystoneContext as GenericKeystoneContext,
} from '@keystone-next/keystone/types';
type Scalars = {
  readonly ID: string;
  readonly Boolean: boolean;
  readonly String: string;
  readonly Int: number;
  readonly Float: number;
  readonly JSON: import("@keystone-next/keystone/types").JSONValue;
  readonly Decimal: import("@keystone-next/keystone/types").Decimal | string;
};

export type UserWhereUniqueInput = {
  readonly id?: Scalars["ID"] | null;
  readonly email?: Scalars["String"] | null;
};

export type UserWhereInput = {
  readonly AND?: ReadonlyArray<UserWhereInput> | UserWhereInput | null;
  readonly OR?: ReadonlyArray<UserWhereInput> | UserWhereInput | null;
  readonly NOT?: ReadonlyArray<UserWhereInput> | UserWhereInput | null;
  readonly id?: IDFilter | null;
  readonly name?: StringFilter | null;
  readonly email?: StringFilter | null;
  readonly password?: PasswordFilter | null;
  readonly cart?: CartItemManyRelationFilter | null;
  readonly orders?: OrderManyRelationFilter | null;
  readonly role?: RoleWhereInput | null;
  readonly products?: ProductManyRelationFilter | null;
  readonly passwordResetToken?: PasswordFilter | null;
  readonly passwordResetIssuedAt?: DateTimeNullableFilter | null;
  readonly passwordResetRedeemedAt?: DateTimeNullableFilter | null;
};

export type IDFilter = {
  readonly equals?: Scalars["ID"] | null;
  readonly in?: ReadonlyArray<Scalars["ID"]> | Scalars["ID"] | null;
  readonly notIn?: ReadonlyArray<Scalars["ID"]> | Scalars["ID"] | null;
  readonly lt?: Scalars["ID"] | null;
  readonly lte?: Scalars["ID"] | null;
  readonly gt?: Scalars["ID"] | null;
  readonly gte?: Scalars["ID"] | null;
  readonly not?: IDFilter | null;
};

export type StringFilter = {
  readonly equals?: Scalars["String"] | null;
  readonly in?: ReadonlyArray<Scalars["String"]> | Scalars["String"] | null;
  readonly notIn?: ReadonlyArray<Scalars["String"]> | Scalars["String"] | null;
  readonly lt?: Scalars["String"] | null;
  readonly lte?: Scalars["String"] | null;
  readonly gt?: Scalars["String"] | null;
  readonly gte?: Scalars["String"] | null;
  readonly contains?: Scalars["String"] | null;
  readonly startsWith?: Scalars["String"] | null;
  readonly endsWith?: Scalars["String"] | null;
  readonly not?: NestedStringFilter | null;
};

export type NestedStringFilter = {
  readonly equals?: Scalars["String"] | null;
  readonly in?: ReadonlyArray<Scalars["String"]> | Scalars["String"] | null;
  readonly notIn?: ReadonlyArray<Scalars["String"]> | Scalars["String"] | null;
  readonly lt?: Scalars["String"] | null;
  readonly lte?: Scalars["String"] | null;
  readonly gt?: Scalars["String"] | null;
  readonly gte?: Scalars["String"] | null;
  readonly contains?: Scalars["String"] | null;
  readonly startsWith?: Scalars["String"] | null;
  readonly endsWith?: Scalars["String"] | null;
  readonly not?: NestedStringFilter | null;
};

export type PasswordFilter = {
  readonly isSet: Scalars["Boolean"];
};

export type CartItemManyRelationFilter = {
  readonly every?: CartItemWhereInput | null;
  readonly some?: CartItemWhereInput | null;
  readonly none?: CartItemWhereInput | null;
};

export type OrderManyRelationFilter = {
  readonly every?: OrderWhereInput | null;
  readonly some?: OrderWhereInput | null;
  readonly none?: OrderWhereInput | null;
};

export type ProductManyRelationFilter = {
  readonly every?: ProductWhereInput | null;
  readonly some?: ProductWhereInput | null;
  readonly none?: ProductWhereInput | null;
};

export type DateTimeNullableFilter = {
  readonly equals?: any | null;
  readonly in?: ReadonlyArray<any> | any | null;
  readonly notIn?: ReadonlyArray<any> | any | null;
  readonly lt?: any | null;
  readonly lte?: any | null;
  readonly gt?: any | null;
  readonly gte?: any | null;
  readonly not?: DateTimeNullableFilter | null;
};

export type UserOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly name?: OrderDirection | null;
  readonly email?: OrderDirection | null;
  readonly passwordResetIssuedAt?: OrderDirection | null;
  readonly passwordResetRedeemedAt?: OrderDirection | null;
};

export type OrderDirection =
  | "asc"
  | "desc";

export type UserUpdateInput = {
  readonly name?: Scalars["String"] | null;
  readonly email?: Scalars["String"] | null;
  readonly password?: Scalars["String"] | null;
  readonly cart?: CartItemRelateToManyForUpdateInput | null;
  readonly orders?: OrderRelateToManyForUpdateInput | null;
  readonly role?: RoleRelateToOneForUpdateInput | null;
  readonly products?: ProductRelateToManyForUpdateInput | null;
  readonly passwordResetToken?: Scalars["String"] | null;
  readonly passwordResetIssuedAt?: any | null;
  readonly passwordResetRedeemedAt?: any | null;
};

export type CartItemRelateToManyForUpdateInput = {
  readonly disconnect?: ReadonlyArray<CartItemWhereUniqueInput> | CartItemWhereUniqueInput | null;
  readonly set?: ReadonlyArray<CartItemWhereUniqueInput> | CartItemWhereUniqueInput | null;
  readonly create?: ReadonlyArray<CartItemCreateInput> | CartItemCreateInput | null;
  readonly connect?: ReadonlyArray<CartItemWhereUniqueInput> | CartItemWhereUniqueInput | null;
};

export type OrderRelateToManyForUpdateInput = {
  readonly disconnect?: ReadonlyArray<OrderWhereUniqueInput> | OrderWhereUniqueInput | null;
  readonly set?: ReadonlyArray<OrderWhereUniqueInput> | OrderWhereUniqueInput | null;
  readonly create?: ReadonlyArray<OrderCreateInput> | OrderCreateInput | null;
  readonly connect?: ReadonlyArray<OrderWhereUniqueInput> | OrderWhereUniqueInput | null;
};

export type RoleRelateToOneForUpdateInput = {
  readonly create?: RoleCreateInput | null;
  readonly connect?: RoleWhereUniqueInput | null;
  readonly disconnect?: Scalars["Boolean"] | null;
};

export type ProductRelateToManyForUpdateInput = {
  readonly disconnect?: ReadonlyArray<ProductWhereUniqueInput> | ProductWhereUniqueInput | null;
  readonly set?: ReadonlyArray<ProductWhereUniqueInput> | ProductWhereUniqueInput | null;
  readonly create?: ReadonlyArray<ProductCreateInput> | ProductCreateInput | null;
  readonly connect?: ReadonlyArray<ProductWhereUniqueInput> | ProductWhereUniqueInput | null;
};

export type UserUpdateArgs = {
  readonly where: UserWhereUniqueInput;
  readonly data: UserUpdateInput;
};

export type UserCreateInput = {
  readonly name?: Scalars["String"] | null;
  readonly email?: Scalars["String"] | null;
  readonly password?: Scalars["String"] | null;
  readonly cart?: CartItemRelateToManyForCreateInput | null;
  readonly orders?: OrderRelateToManyForCreateInput | null;
  readonly role?: RoleRelateToOneForCreateInput | null;
  readonly products?: ProductRelateToManyForCreateInput | null;
  readonly passwordResetToken?: Scalars["String"] | null;
  readonly passwordResetIssuedAt?: any | null;
  readonly passwordResetRedeemedAt?: any | null;
};

export type CartItemRelateToManyForCreateInput = {
  readonly create?: ReadonlyArray<CartItemCreateInput> | CartItemCreateInput | null;
  readonly connect?: ReadonlyArray<CartItemWhereUniqueInput> | CartItemWhereUniqueInput | null;
};

export type OrderRelateToManyForCreateInput = {
  readonly create?: ReadonlyArray<OrderCreateInput> | OrderCreateInput | null;
  readonly connect?: ReadonlyArray<OrderWhereUniqueInput> | OrderWhereUniqueInput | null;
};

export type RoleRelateToOneForCreateInput = {
  readonly create?: RoleCreateInput | null;
  readonly connect?: RoleWhereUniqueInput | null;
};

export type ProductRelateToManyForCreateInput = {
  readonly create?: ReadonlyArray<ProductCreateInput> | ProductCreateInput | null;
  readonly connect?: ReadonlyArray<ProductWhereUniqueInput> | ProductWhereUniqueInput | null;
};

export type ProductWhereUniqueInput = {
  readonly id?: Scalars["ID"] | null;
};

export type ProductWhereInput = {
  readonly AND?: ReadonlyArray<ProductWhereInput> | ProductWhereInput | null;
  readonly OR?: ReadonlyArray<ProductWhereInput> | ProductWhereInput | null;
  readonly NOT?: ReadonlyArray<ProductWhereInput> | ProductWhereInput | null;
  readonly id?: IDFilter | null;
  readonly name?: StringFilter | null;
  readonly description?: StringFilter | null;
  readonly photo?: ProductImageWhereInput | null;
  readonly status?: StringNullableFilter | null;
  readonly price?: IntNullableFilter | null;
  readonly user?: UserWhereInput | null;
};

export type StringNullableFilter = {
  readonly equals?: Scalars["String"] | null;
  readonly in?: ReadonlyArray<Scalars["String"]> | Scalars["String"] | null;
  readonly notIn?: ReadonlyArray<Scalars["String"]> | Scalars["String"] | null;
  readonly lt?: Scalars["String"] | null;
  readonly lte?: Scalars["String"] | null;
  readonly gt?: Scalars["String"] | null;
  readonly gte?: Scalars["String"] | null;
  readonly contains?: Scalars["String"] | null;
  readonly startsWith?: Scalars["String"] | null;
  readonly endsWith?: Scalars["String"] | null;
  readonly not?: NestedStringNullableFilter | null;
};

export type NestedStringNullableFilter = {
  readonly equals?: Scalars["String"] | null;
  readonly in?: ReadonlyArray<Scalars["String"]> | Scalars["String"] | null;
  readonly notIn?: ReadonlyArray<Scalars["String"]> | Scalars["String"] | null;
  readonly lt?: Scalars["String"] | null;
  readonly lte?: Scalars["String"] | null;
  readonly gt?: Scalars["String"] | null;
  readonly gte?: Scalars["String"] | null;
  readonly contains?: Scalars["String"] | null;
  readonly startsWith?: Scalars["String"] | null;
  readonly endsWith?: Scalars["String"] | null;
  readonly not?: NestedStringNullableFilter | null;
};

export type IntNullableFilter = {
  readonly equals?: Scalars["Int"] | null;
  readonly in?: ReadonlyArray<Scalars["Int"]> | Scalars["Int"] | null;
  readonly notIn?: ReadonlyArray<Scalars["Int"]> | Scalars["Int"] | null;
  readonly lt?: Scalars["Int"] | null;
  readonly lte?: Scalars["Int"] | null;
  readonly gt?: Scalars["Int"] | null;
  readonly gte?: Scalars["Int"] | null;
  readonly not?: IntNullableFilter | null;
};

export type ProductOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly name?: OrderDirection | null;
  readonly description?: OrderDirection | null;
  readonly status?: OrderDirection | null;
  readonly price?: OrderDirection | null;
};

export type ProductUpdateInput = {
  readonly name?: Scalars["String"] | null;
  readonly description?: Scalars["String"] | null;
  readonly photo?: ProductImageRelateToOneForUpdateInput | null;
  readonly status?: Scalars["String"] | null;
  readonly price?: Scalars["Int"] | null;
  readonly user?: UserRelateToOneForUpdateInput | null;
};

export type ProductImageRelateToOneForUpdateInput = {
  readonly create?: ProductImageCreateInput | null;
  readonly connect?: ProductImageWhereUniqueInput | null;
  readonly disconnect?: Scalars["Boolean"] | null;
};

export type UserRelateToOneForUpdateInput = {
  readonly create?: UserCreateInput | null;
  readonly connect?: UserWhereUniqueInput | null;
  readonly disconnect?: Scalars["Boolean"] | null;
};

export type ProductUpdateArgs = {
  readonly where: ProductWhereUniqueInput;
  readonly data: ProductUpdateInput;
};

export type ProductCreateInput = {
  readonly name?: Scalars["String"] | null;
  readonly description?: Scalars["String"] | null;
  readonly photo?: ProductImageRelateToOneForCreateInput | null;
  readonly status?: Scalars["String"] | null;
  readonly price?: Scalars["Int"] | null;
  readonly user?: UserRelateToOneForCreateInput | null;
};

export type ProductImageRelateToOneForCreateInput = {
  readonly create?: ProductImageCreateInput | null;
  readonly connect?: ProductImageWhereUniqueInput | null;
};

export type UserRelateToOneForCreateInput = {
  readonly create?: UserCreateInput | null;
  readonly connect?: UserWhereUniqueInput | null;
};

export type CloudinaryImageFormat = {
  readonly prettyName?: Scalars["String"] | null;
  readonly width?: Scalars["String"] | null;
  readonly height?: Scalars["String"] | null;
  readonly crop?: Scalars["String"] | null;
  readonly aspect_ratio?: Scalars["String"] | null;
  readonly gravity?: Scalars["String"] | null;
  readonly zoom?: Scalars["String"] | null;
  readonly x?: Scalars["String"] | null;
  readonly y?: Scalars["String"] | null;
  readonly format?: Scalars["String"] | null;
  readonly fetch_format?: Scalars["String"] | null;
  readonly quality?: Scalars["String"] | null;
  readonly radius?: Scalars["String"] | null;
  readonly angle?: Scalars["String"] | null;
  readonly effect?: Scalars["String"] | null;
  readonly opacity?: Scalars["String"] | null;
  readonly border?: Scalars["String"] | null;
  readonly background?: Scalars["String"] | null;
  readonly overlay?: Scalars["String"] | null;
  readonly underlay?: Scalars["String"] | null;
  readonly default_image?: Scalars["String"] | null;
  readonly delay?: Scalars["String"] | null;
  readonly color?: Scalars["String"] | null;
  readonly color_space?: Scalars["String"] | null;
  readonly dpr?: Scalars["String"] | null;
  readonly page?: Scalars["String"] | null;
  readonly density?: Scalars["String"] | null;
  readonly flags?: Scalars["String"] | null;
  readonly transformation?: Scalars["String"] | null;
};

export type ProductImageWhereUniqueInput = {
  readonly id?: Scalars["ID"] | null;
};

export type ProductImageWhereInput = {
  readonly AND?: ReadonlyArray<ProductImageWhereInput> | ProductImageWhereInput | null;
  readonly OR?: ReadonlyArray<ProductImageWhereInput> | ProductImageWhereInput | null;
  readonly NOT?: ReadonlyArray<ProductImageWhereInput> | ProductImageWhereInput | null;
  readonly id?: IDFilter | null;
  readonly altText?: StringFilter | null;
  readonly product?: ProductWhereInput | null;
};

export type ProductImageOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly altText?: OrderDirection | null;
};

export type ProductImageUpdateInput = {
  readonly image?: any | null;
  readonly altText?: Scalars["String"] | null;
  readonly product?: ProductRelateToOneForUpdateInput | null;
};

export type ProductRelateToOneForUpdateInput = {
  readonly create?: ProductCreateInput | null;
  readonly connect?: ProductWhereUniqueInput | null;
  readonly disconnect?: Scalars["Boolean"] | null;
};

export type ProductImageUpdateArgs = {
  readonly where: ProductImageWhereUniqueInput;
  readonly data: ProductImageUpdateInput;
};

export type ProductImageCreateInput = {
  readonly image?: any | null;
  readonly altText?: Scalars["String"] | null;
  readonly product?: ProductRelateToOneForCreateInput | null;
};

export type ProductRelateToOneForCreateInput = {
  readonly create?: ProductCreateInput | null;
  readonly connect?: ProductWhereUniqueInput | null;
};

export type CartItemWhereUniqueInput = {
  readonly id?: Scalars["ID"] | null;
};

export type CartItemWhereInput = {
  readonly AND?: ReadonlyArray<CartItemWhereInput> | CartItemWhereInput | null;
  readonly OR?: ReadonlyArray<CartItemWhereInput> | CartItemWhereInput | null;
  readonly NOT?: ReadonlyArray<CartItemWhereInput> | CartItemWhereInput | null;
  readonly id?: IDFilter | null;
  readonly quantity?: IntFilter | null;
  readonly product?: ProductWhereInput | null;
  readonly user?: UserWhereInput | null;
};

export type IntFilter = {
  readonly equals?: Scalars["Int"] | null;
  readonly in?: ReadonlyArray<Scalars["Int"]> | Scalars["Int"] | null;
  readonly notIn?: ReadonlyArray<Scalars["Int"]> | Scalars["Int"] | null;
  readonly lt?: Scalars["Int"] | null;
  readonly lte?: Scalars["Int"] | null;
  readonly gt?: Scalars["Int"] | null;
  readonly gte?: Scalars["Int"] | null;
  readonly not?: IntFilter | null;
};

export type CartItemOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly quantity?: OrderDirection | null;
};

export type CartItemUpdateInput = {
  readonly quantity?: Scalars["Int"] | null;
  readonly product?: ProductRelateToOneForUpdateInput | null;
  readonly user?: UserRelateToOneForUpdateInput | null;
};

export type CartItemUpdateArgs = {
  readonly where: CartItemWhereUniqueInput;
  readonly data: CartItemUpdateInput;
};

export type CartItemCreateInput = {
  readonly quantity?: Scalars["Int"] | null;
  readonly product?: ProductRelateToOneForCreateInput | null;
  readonly user?: UserRelateToOneForCreateInput | null;
};

export type OrderItemWhereUniqueInput = {
  readonly id?: Scalars["ID"] | null;
};

export type OrderItemWhereInput = {
  readonly AND?: ReadonlyArray<OrderItemWhereInput> | OrderItemWhereInput | null;
  readonly OR?: ReadonlyArray<OrderItemWhereInput> | OrderItemWhereInput | null;
  readonly NOT?: ReadonlyArray<OrderItemWhereInput> | OrderItemWhereInput | null;
  readonly id?: IDFilter | null;
  readonly name?: StringFilter | null;
  readonly description?: StringFilter | null;
  readonly photo?: ProductImageWhereInput | null;
  readonly price?: IntNullableFilter | null;
  readonly quantity?: IntNullableFilter | null;
  readonly order?: OrderWhereInput | null;
};

export type OrderItemOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly name?: OrderDirection | null;
  readonly description?: OrderDirection | null;
  readonly price?: OrderDirection | null;
  readonly quantity?: OrderDirection | null;
};

export type OrderItemUpdateInput = {
  readonly name?: Scalars["String"] | null;
  readonly description?: Scalars["String"] | null;
  readonly photo?: ProductImageRelateToOneForUpdateInput | null;
  readonly price?: Scalars["Int"] | null;
  readonly quantity?: Scalars["Int"] | null;
  readonly order?: OrderRelateToOneForUpdateInput | null;
};

export type OrderRelateToOneForUpdateInput = {
  readonly create?: OrderCreateInput | null;
  readonly connect?: OrderWhereUniqueInput | null;
  readonly disconnect?: Scalars["Boolean"] | null;
};

export type OrderItemUpdateArgs = {
  readonly where: OrderItemWhereUniqueInput;
  readonly data: OrderItemUpdateInput;
};

export type OrderItemCreateInput = {
  readonly name?: Scalars["String"] | null;
  readonly description?: Scalars["String"] | null;
  readonly photo?: ProductImageRelateToOneForCreateInput | null;
  readonly price?: Scalars["Int"] | null;
  readonly quantity?: Scalars["Int"] | null;
  readonly order?: OrderRelateToOneForCreateInput | null;
};

export type OrderRelateToOneForCreateInput = {
  readonly create?: OrderCreateInput | null;
  readonly connect?: OrderWhereUniqueInput | null;
};

export type OrderWhereUniqueInput = {
  readonly id?: Scalars["ID"] | null;
};

export type OrderWhereInput = {
  readonly AND?: ReadonlyArray<OrderWhereInput> | OrderWhereInput | null;
  readonly OR?: ReadonlyArray<OrderWhereInput> | OrderWhereInput | null;
  readonly NOT?: ReadonlyArray<OrderWhereInput> | OrderWhereInput | null;
  readonly id?: IDFilter | null;
  readonly total?: IntNullableFilter | null;
  readonly items?: OrderItemManyRelationFilter | null;
  readonly user?: UserWhereInput | null;
  readonly charge?: StringFilter | null;
};

export type OrderItemManyRelationFilter = {
  readonly every?: OrderItemWhereInput | null;
  readonly some?: OrderItemWhereInput | null;
  readonly none?: OrderItemWhereInput | null;
};

export type OrderOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly total?: OrderDirection | null;
  readonly charge?: OrderDirection | null;
};

export type OrderUpdateInput = {
  readonly total?: Scalars["Int"] | null;
  readonly items?: OrderItemRelateToManyForUpdateInput | null;
  readonly user?: UserRelateToOneForUpdateInput | null;
  readonly charge?: Scalars["String"] | null;
};

export type OrderItemRelateToManyForUpdateInput = {
  readonly disconnect?: ReadonlyArray<OrderItemWhereUniqueInput> | OrderItemWhereUniqueInput | null;
  readonly set?: ReadonlyArray<OrderItemWhereUniqueInput> | OrderItemWhereUniqueInput | null;
  readonly create?: ReadonlyArray<OrderItemCreateInput> | OrderItemCreateInput | null;
  readonly connect?: ReadonlyArray<OrderItemWhereUniqueInput> | OrderItemWhereUniqueInput | null;
};

export type OrderUpdateArgs = {
  readonly where: OrderWhereUniqueInput;
  readonly data: OrderUpdateInput;
};

export type OrderCreateInput = {
  readonly total?: Scalars["Int"] | null;
  readonly items?: OrderItemRelateToManyForCreateInput | null;
  readonly user?: UserRelateToOneForCreateInput | null;
  readonly charge?: Scalars["String"] | null;
};

export type OrderItemRelateToManyForCreateInput = {
  readonly create?: ReadonlyArray<OrderItemCreateInput> | OrderItemCreateInput | null;
  readonly connect?: ReadonlyArray<OrderItemWhereUniqueInput> | OrderItemWhereUniqueInput | null;
};

export type RoleWhereUniqueInput = {
  readonly id?: Scalars["ID"] | null;
};

export type RoleWhereInput = {
  readonly AND?: ReadonlyArray<RoleWhereInput> | RoleWhereInput | null;
  readonly OR?: ReadonlyArray<RoleWhereInput> | RoleWhereInput | null;
  readonly NOT?: ReadonlyArray<RoleWhereInput> | RoleWhereInput | null;
  readonly id?: IDFilter | null;
  readonly name?: StringFilter | null;
  readonly canManageProducts?: BooleanFilter | null;
  readonly canSeeOtherUsers?: BooleanFilter | null;
  readonly canManageUsers?: BooleanFilter | null;
  readonly canManageRoles?: BooleanFilter | null;
  readonly canManageCart?: BooleanFilter | null;
  readonly canManageOrders?: BooleanFilter | null;
  readonly assignedTo?: UserManyRelationFilter | null;
};

export type BooleanFilter = {
  readonly equals?: Scalars["Boolean"] | null;
  readonly not?: BooleanFilter | null;
};

export type UserManyRelationFilter = {
  readonly every?: UserWhereInput | null;
  readonly some?: UserWhereInput | null;
  readonly none?: UserWhereInput | null;
};

export type RoleOrderByInput = {
  readonly id?: OrderDirection | null;
  readonly name?: OrderDirection | null;
  readonly canManageProducts?: OrderDirection | null;
  readonly canSeeOtherUsers?: OrderDirection | null;
  readonly canManageUsers?: OrderDirection | null;
  readonly canManageRoles?: OrderDirection | null;
  readonly canManageCart?: OrderDirection | null;
  readonly canManageOrders?: OrderDirection | null;
};

export type RoleUpdateInput = {
  readonly name?: Scalars["String"] | null;
  readonly canManageProducts?: Scalars["Boolean"] | null;
  readonly canSeeOtherUsers?: Scalars["Boolean"] | null;
  readonly canManageUsers?: Scalars["Boolean"] | null;
  readonly canManageRoles?: Scalars["Boolean"] | null;
  readonly canManageCart?: Scalars["Boolean"] | null;
  readonly canManageOrders?: Scalars["Boolean"] | null;
  readonly assignedTo?: UserRelateToManyForUpdateInput | null;
};

export type UserRelateToManyForUpdateInput = {
  readonly disconnect?: ReadonlyArray<UserWhereUniqueInput> | UserWhereUniqueInput | null;
  readonly set?: ReadonlyArray<UserWhereUniqueInput> | UserWhereUniqueInput | null;
  readonly create?: ReadonlyArray<UserCreateInput> | UserCreateInput | null;
  readonly connect?: ReadonlyArray<UserWhereUniqueInput> | UserWhereUniqueInput | null;
};

export type RoleUpdateArgs = {
  readonly where: RoleWhereUniqueInput;
  readonly data: RoleUpdateInput;
};

export type RoleCreateInput = {
  readonly name?: Scalars["String"] | null;
  readonly canManageProducts?: Scalars["Boolean"] | null;
  readonly canSeeOtherUsers?: Scalars["Boolean"] | null;
  readonly canManageUsers?: Scalars["Boolean"] | null;
  readonly canManageRoles?: Scalars["Boolean"] | null;
  readonly canManageCart?: Scalars["Boolean"] | null;
  readonly canManageOrders?: Scalars["Boolean"] | null;
  readonly assignedTo?: UserRelateToManyForCreateInput | null;
};

export type UserRelateToManyForCreateInput = {
  readonly create?: ReadonlyArray<UserCreateInput> | UserCreateInput | null;
  readonly connect?: ReadonlyArray<UserWhereUniqueInput> | UserWhereUniqueInput | null;
};

export type CreateInitialUserInput = {
  readonly name?: Scalars["String"] | null;
  readonly email?: Scalars["String"] | null;
  readonly password?: Scalars["String"] | null;
};

export type PasswordResetRedemptionErrorCode =
  | "FAILURE"
  | "TOKEN_EXPIRED"
  | "TOKEN_REDEEMED";

export type KeystoneAdminUIFieldMetaCreateViewFieldMode =
  | "edit"
  | "hidden";

export type KeystoneAdminUIFieldMetaListViewFieldMode =
  | "read"
  | "hidden";

export type KeystoneAdminUIFieldMetaItemViewFieldMode =
  | "edit"
  | "read"
  | "hidden";

export type QueryMode =
  | "default"
  | "insensitive";

export type KeystoneAdminUISortDirection =
  | "ASC"
  | "DESC";


export type UserListTypeInfo = {
  key: "User";
  fields: "id"|"name"|"email"|"password"|"cart"|"orders"|"role"|"products"|"passwordResetToken"|"passwordResetIssuedAt"|"passwordResetRedeemedAt"
  backing: import(".prisma/client").User;
  inputs: {
    where: UserWhereInput;
    uniqueWhere: UserWhereUniqueInput;
    create: UserCreateInput;
    update: UserUpdateInput;
  };
  args: {
    listQuery: {
  readonly where?: UserWhereInput;
  readonly orderBy?: ReadonlyArray<UserOrderByInput> | UserOrderByInput;
  readonly take?: Scalars["Int"] | null;
  readonly skip?: Scalars["Int"];
}
  };
};

export type UserListFn = (
  listConfig: import('@keystone-next/keystone').ListConfig<UserListTypeInfo, UserListTypeInfo['fields']>
) => import('@keystone-next/keystone').ListConfig<UserListTypeInfo, UserListTypeInfo['fields']>;

export type ProductListTypeInfo = {
  key: "Product";
  fields: "id"|"name"|"description"|"photo"|"status"|"price"|"user"
  backing: import(".prisma/client").Product;
  inputs: {
    where: ProductWhereInput;
    uniqueWhere: ProductWhereUniqueInput;
    create: ProductCreateInput;
    update: ProductUpdateInput;
  };
  args: {
    listQuery: {
  readonly where?: ProductWhereInput;
  readonly orderBy?: ReadonlyArray<ProductOrderByInput> | ProductOrderByInput;
  readonly take?: Scalars["Int"] | null;
  readonly skip?: Scalars["Int"];
}
  };
};

export type ProductListFn = (
  listConfig: import('@keystone-next/keystone').ListConfig<ProductListTypeInfo, ProductListTypeInfo['fields']>
) => import('@keystone-next/keystone').ListConfig<ProductListTypeInfo, ProductListTypeInfo['fields']>;

export type ProductImageListTypeInfo = {
  key: "ProductImage";
  fields: "id"|"image"|"altText"|"product"
  backing: import(".prisma/client").ProductImage;
  inputs: {
    where: ProductImageWhereInput;
    uniqueWhere: ProductImageWhereUniqueInput;
    create: ProductImageCreateInput;
    update: ProductImageUpdateInput;
  };
  args: {
    listQuery: {
  readonly where?: ProductImageWhereInput;
  readonly orderBy?: ReadonlyArray<ProductImageOrderByInput> | ProductImageOrderByInput;
  readonly take?: Scalars["Int"] | null;
  readonly skip?: Scalars["Int"];
}
  };
};

export type ProductImageListFn = (
  listConfig: import('@keystone-next/keystone').ListConfig<ProductImageListTypeInfo, ProductImageListTypeInfo['fields']>
) => import('@keystone-next/keystone').ListConfig<ProductImageListTypeInfo, ProductImageListTypeInfo['fields']>;

export type CartItemListTypeInfo = {
  key: "CartItem";
  fields: "id"|"quantity"|"product"|"user"
  backing: import(".prisma/client").CartItem;
  inputs: {
    where: CartItemWhereInput;
    uniqueWhere: CartItemWhereUniqueInput;
    create: CartItemCreateInput;
    update: CartItemUpdateInput;
  };
  args: {
    listQuery: {
  readonly where?: CartItemWhereInput;
  readonly orderBy?: ReadonlyArray<CartItemOrderByInput> | CartItemOrderByInput;
  readonly take?: Scalars["Int"] | null;
  readonly skip?: Scalars["Int"];
}
  };
};

export type CartItemListFn = (
  listConfig: import('@keystone-next/keystone').ListConfig<CartItemListTypeInfo, CartItemListTypeInfo['fields']>
) => import('@keystone-next/keystone').ListConfig<CartItemListTypeInfo, CartItemListTypeInfo['fields']>;

export type OrderItemListTypeInfo = {
  key: "OrderItem";
  fields: "id"|"name"|"description"|"photo"|"price"|"quantity"|"order"
  backing: import(".prisma/client").OrderItem;
  inputs: {
    where: OrderItemWhereInput;
    uniqueWhere: OrderItemWhereUniqueInput;
    create: OrderItemCreateInput;
    update: OrderItemUpdateInput;
  };
  args: {
    listQuery: {
  readonly where?: OrderItemWhereInput;
  readonly orderBy?: ReadonlyArray<OrderItemOrderByInput> | OrderItemOrderByInput;
  readonly take?: Scalars["Int"] | null;
  readonly skip?: Scalars["Int"];
}
  };
};

export type OrderItemListFn = (
  listConfig: import('@keystone-next/keystone').ListConfig<OrderItemListTypeInfo, OrderItemListTypeInfo['fields']>
) => import('@keystone-next/keystone').ListConfig<OrderItemListTypeInfo, OrderItemListTypeInfo['fields']>;

export type OrderListTypeInfo = {
  key: "Order";
  fields: "id"|"label"|"total"|"items"|"user"|"charge"
  backing: import(".prisma/client").Order;
  inputs: {
    where: OrderWhereInput;
    uniqueWhere: OrderWhereUniqueInput;
    create: OrderCreateInput;
    update: OrderUpdateInput;
  };
  args: {
    listQuery: {
  readonly where?: OrderWhereInput;
  readonly orderBy?: ReadonlyArray<OrderOrderByInput> | OrderOrderByInput;
  readonly take?: Scalars["Int"] | null;
  readonly skip?: Scalars["Int"];
}
  };
};

export type OrderListFn = (
  listConfig: import('@keystone-next/keystone').ListConfig<OrderListTypeInfo, OrderListTypeInfo['fields']>
) => import('@keystone-next/keystone').ListConfig<OrderListTypeInfo, OrderListTypeInfo['fields']>;

export type RoleListTypeInfo = {
  key: "Role";
  fields: "id"|"name"|"canManageProducts"|"canSeeOtherUsers"|"canManageUsers"|"canManageRoles"|"canManageCart"|"canManageOrders"|"assignedTo"
  backing: import(".prisma/client").Role;
  inputs: {
    where: RoleWhereInput;
    uniqueWhere: RoleWhereUniqueInput;
    create: RoleCreateInput;
    update: RoleUpdateInput;
  };
  args: {
    listQuery: {
  readonly where?: RoleWhereInput;
  readonly orderBy?: ReadonlyArray<RoleOrderByInput> | RoleOrderByInput;
  readonly take?: Scalars["Int"] | null;
  readonly skip?: Scalars["Int"];
}
  };
};

export type RoleListFn = (
  listConfig: import('@keystone-next/keystone').ListConfig<RoleListTypeInfo, RoleListTypeInfo['fields']>
) => import('@keystone-next/keystone').ListConfig<RoleListTypeInfo, RoleListTypeInfo['fields']>;

export type KeystoneListsTypeInfo = {
  readonly "User": UserListTypeInfo;
  readonly "Product": ProductListTypeInfo;
  readonly "ProductImage": ProductImageListTypeInfo;
  readonly "CartItem": CartItemListTypeInfo;
  readonly "OrderItem": OrderItemListTypeInfo;
  readonly "Order": OrderListTypeInfo;
  readonly "Role": RoleListTypeInfo;
};
export type KeystoneListsAPI = GenericKeystoneListsAPI<KeystoneListsTypeInfo>;
export type KeystoneDbAPI = GenericKeystoneDbAPI<KeystoneListsTypeInfo>;

export type KeystoneContext = Omit<GenericKeystoneContext, 'db' | 'query' | 'prisma'> & {
  db: KeystoneDbAPI;
  query: KeystoneListsAPI;
  prisma: import('.prisma/client').PrismaClient;
};
